Git Commands : working -> staging -> commit.
  
    1 - git init :

      *  The git init command is used to initialize a new Git repository. When you run this command in a directory, 
      it creates a new .git subdirectory, which contains all the necessary files for Git to start tracking changes in that directory 
      *  These commands will initialize Git.
      *  By default, Git will be initialized to the master branch.
      *  To set it to the main branch, use the following command:
        --> git init -b main

    2 - git status :
      
      * The git status command shows the state of the working directory and the staging area. 
      It lets you see which changes have been staged, which haven't, and which files aren't being tracked by Git. 
      It's a handy way to get an overview before committing your changes.

    3 - git add : It is used to add the files from working directory to staging area.

    4 - git commit - m "The message" : 

      * git commit captures a snapshot of the project's currently staged changes. 
      It's like sealing your work with a timestamp, a message describing what you did, 
      and ensuring you can always go back to this version if needed.

    5 - git log : git log shows the commit history of your repository, listing each commit with its unique ID, author, date, and message.

    6 - git commit -a -m "To skip staging" : This will move Unstaged files from working directory to commit.

    7 - git diff : This shows you the difference between working, staged and commit files.

    8 - git rm --cached fileName.extn : This will remove the file from commit area.

Push the content to github : 

  1 - git init 
  2 - git add .
  3 - git commit -m "Commit message"

  4 - git branch -M main  : This is optional, if we haven't made branch initialization during git init.

  Before going next step we need to connect our local repository to remote repository.
  Because all we done till now is in the local repository.

  To connect there are 2 way : 
    1 - https : You need login every time you push.
    2 - ssh : Here connection made using ssh key. This is generated using following command
      --> ssh-keygen -o 
      --> Then you will get the key in .ssh folder present in the user folder of the system.
      Key is present in id_ed25519.pub file.

  Once these all steps done now it's ready to connect local repository to remote.

  5 - git remote add origin --url--  : This will establish the connection between local with remote.

  6 - git push -u origin main : This will push the code to github repository (remote repository).

Tagging : 

  1 - Annotated : used to give info along with the tag.
  2 - lightweighted

Braching : 

  1 - git checkout -b branchName : Created a branch and switches to that branch from the working branch.
  2 - git switch -c branchName : Similarly switch is used.

  - To delete branch : git branch -d branchName.